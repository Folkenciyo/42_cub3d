[THEORY]
	- Map:
		2 dimensional array [][]
	
	- Angle (PoV) of player:
	 * Must stay at 2(pi) to avoid overflow --> Add 2(pi) if negative; substract 2(pi) if overflows that amount
	 * Weird, angle can go to infinity but sin() and cos() functions just handle the angle overflow properly. 
	 	Anyways it would be a good practice to actually calculate whether angles goes beyond 2(pi) or to negative numbers
	
	- Unit vector:
		* Vector from 0,0 to where the player is
		* Every time we move, we have to add or substract to or from that position
			[x0,y0] +- [x1,y1]

[MAKEFILE]

- Put an option to recompile libft when compile the whole project

[RAYCASTING]

	1) Calculate ray direction
	2) Calculate delta distance
	3) Calculate the distance that the ray must travel to reach the next grid (from position of the ray to the next grid)
	4) Perform Digital Diferential Analysis (DDA)
	5) (FINAL) Calculate the wall height, based on the distance between the player and the wall



